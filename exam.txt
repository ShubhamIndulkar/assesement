create database exam;
use exam;
create table author(AUTHOR_ID varchar(30) PRIMARY KEY,AUTHOR_NAME varchar(30),AUTHOR_COUNTRY varchar(30),AUTHOR_CITY varchar(30), PUBLISH_ID varchar(30),foreign key(PUBLISH_ID) references PUBLISH(PUBLISH_ID) );
show tables;
create table publish(PUBLISH_ID varchar (30) PRIMARY KEY,PUBLISH_NAME varchar(30),PUBLISH_CITY VARCHAR(30),PUBLISH_START_DATE date, BRANCHES int );
insert into author(AUTHOR_ID ,AUTHOR_NAME,AUTHOR_COUNTRY,AUTHOR_CITY,PUBLISH_ID) VALUES('AUT001','William Norton','UK','Cambridge','PB01');         
insert into author(AUTHOR_ID ,AUTHOR_NAME,AUTHOR_COUNTRY,AUTHOR_CITY,PUBLISH_ID) VALUES('AUT002','C. J. Wilde','USA','San Francisco','PB04');         
insert into author(AUTHOR_ID ,AUTHOR_NAME,AUTHOR_COUNTRY,AUTHOR_CITY,PUBLISH_ID) VALUES('AUT003','John Betjeman Hunter','RUSSIA','Moscow','PB01');         
insert into author(AUTHOR_ID ,AUTHOR_NAME,AUTHOR_COUNTRY,AUTHOR_CITY,PUBLISH_ID) VALUES('AUT004','John Betjeman Hunter','CANADA','Toronto','PB03');         
insert into author(AUTHOR_ID ,AUTHOR_NAME,AUTHOR_COUNTRY,AUTHOR_CITY,PUBLISH_ID) VALUES('AUT005','S.B.Swaminathan','INDIA','Delhi','PB01');         

insert into AUTHOR VALUES('AUT006','Butler Andre' ,'UK','London','PB03');
insert into AUTHOR VALUES('AUT007','E. Howard','EUROPE','Berlin','PB03');
insert into AUTHOR VALUES('AUT008','Andrew Jeff	GERMANY','Berlin','PB02');
insert into AUTHOR VALUES('AUT009','Drek Tailor	Aust','Melbourne','PB01');
insert into AUTHOR VALUES('AUT010','Mary Coffing','USA','New Jersy','PB04');
SELECT * FROM AUTHOR;





INSERT INTO publish(PUBLISH_ID,PUBLISH_NAME,PUBLISH_CITY,PUBLISH_START_DATE,BRANCHES)VALUES('PB02','Summer Night Publication','Canada','2019-08-31',25);
INSERT INTO publish(PUBLISH_ID,PUBLISH_NAME,PUBLISH_CITY,PUBLISH_START_DATE,BRANCHES)VALUES('PB03','Novel Publisher Ltd','London','2018-08-10',11);
INSERT INTO publish(PUBLISH_ID,PUBLISH_NAME,PUBLISH_CITY,PUBLISH_START_DATE,BRANCHES)VALUES('PB04','Mark Book Sales','New Jersy','2008-05-24',9);

SELECT * FROM PUBLISH;



1.select p.publish_id,p.publish_name,p.publish_city,p.publish_start_date,p.branches from publish p join author a  on p.publish_id = a.publish_id where p.publish_city !=a.author_city and p.publish_city=a.author_country; 
1.Fetch publisher information who have publish_city <> author_city and check if publish_city = author_country . display the correct publisher_city along with other publisher information based on author_city

select p.publish_id,p.publish_name,publish_city as correct_publish_city,publish_start_date,branches from publisher p join author a on p.publish_city<>a.author_city and p.publish_city=a.author_country;
+------------+--------------------------+----------------------+--------------------+----------+
| publish_id | publish_name             | correct_publish_city | publish_start_date | branches |
+------------+--------------------------+----------------------+--------------------+----------+
| PB02       | Summer Night Publication | Canada               | 2019-08-31         | 25       |
+------------+--------------------------+----------------------+--------------------+----------+
1 row in set (0.00 sec)


2.Fetch authors_name, author_country, publish_city, publish_start_date, branches who have publications with most number of branches by century

select p.publish_id,author_name,author_country,publish_city,publish_start_date,branches from author a join publisher p on a.publish_id=p.publish_id group by publish_start_date having p.publish_id =(select publish_id from publisher where year(publish_start_date)<2000 order by branches desc limit 1) or p.publish_id =(select publish_id from publisher where year(publish_start_date)>2000 order by branches desc limit 1);
+------------+----------------+----------------+--------------+--------------------+----------+
| publish_id | author_name    | author_country | publish_city | publish_start_date | branches |
+------------+----------------+----------------+--------------+--------------------+----------+
| PB01       | William Norton | UK             | Berlin       | 1929-04-21         | 10       |
| PB04       | C.J.Wilde      | USA            | New Jersy    | 2008-05-24         | 9        |
+------------+----------------+----------------+--------------+--------------------+----------+
2 rows in set (0.00 sec)



3.Fetch publisher details who have authors in same city and get corresponding author details who belong to same country


4.Fetch authors who have incorrect author_country for same author_city. Display correct author_country along with all author_information

5.Fetch authors who do not have publisher from their country
6.select a.author_id,a.author_name,a.author_city,a.author_country from publish p join author a  on p.publish_id = a.publish_id where substr(p.publish_name,1,1)=substr(a.author_name,1,1);
7.select a.author_id,a.author_name,a.author_city,a.author_country from author a where a.author_name like '_.%.%';
8.select a.author_id,a.author_name,a.author_city,a.author_country from author a where a.author_name not like '_.%';

9.select a.author_id,a.author_name,a.author_city,a.author_country from author a where a.author_name  regexp '^[a-z]+';
10.select a.author_id,a.author_name,a.author_city,a.author_country from publish p join author a  on p.publish_id = a.publish_id order by p.publish_start_date desc limit 1;
11.Fetch count of authors belong to same continent(eg. Berlin -> Europe)

select count(*) as author_count,continents from
    -> (select *,case when author_city="Berlin" or author_city="London" or  author_city="Cambridge" then "Europe"
    -> when  author_city="San fransisco" or  author_city="Toronto" or  author_city="New jersy" then "America"
    -> when  author_city="Moscow" or  author_city="Delhi" then "Asia"
    -> else "Australia" end as continents
    -> from author)as temp group by continents;
+--------------+------------+
| author_count | continents |
+--------------+------------+
|            4 | Europe     |
|            2 | Australia  |
|            2 | Asia       |
|            2 | America    |
+--------------+------------+
4 rows in set (0.00 sec)